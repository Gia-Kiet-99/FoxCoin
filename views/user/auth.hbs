<div id="container" class="container-fluid">
  <div class="row d-flex justify-content-center align-items-center full-height">
    <div class="col-sm-4">
      <div class="text-center">
        <img class="mb-5" src="/images/fox_icon.png" width="120px" height="120px" alt="fox.png">
      </div>
      <div class="opacity-bg auth-card">
        <div class="d-flex">
          <button id="signin-tab" class="tab-button" onclick="toggleActiveTab(this.id)">
            <strong>Sign in</strong>
          </button>
          <button id="signup-tab" class="tab-button" onclick="toggleActiveTab(this.id)">
            <strong>Sign up</strong>
          </button>
        </div>
        <div class="form-container">
          <div id="signup-form" hidden>
            <div class="form-group text-gray">
              <label for="email"><strong>Email address</strong></label><br>
              <input type="text" class="form-control shadow-none" id="email" name="email" aria-describedby="emailHelp"
                required value="{{email}}" onchange="checkEmailExists(this.value)">
              <small id="emailHelp" class="form-text text-muted"></small>
            </div>
            <div class="form-group text-gray">
              <label for="password1"><strong>Password</strong></label>
              <input type="password" class="form-control" id="password1" name="password" required>
            </div>
            <div class="form-group form-check text-gray">
              <input type="checkbox" class="form-check-input" id="showpass1" onclick="togglePassVisibility(this.id)">
              <label class="form-check-label" for="showpass1">Show password</label>
            </div>
            <br>
            <button id="signup-button" class="btn btn-block btn-info my-2"
              onclick="handleSignUp()"><strong>Submit</strong></button>
          </div>
          <form id="signin-form" action="/users/auth" method="POST" hidden>
            <div class="form-group text-gray">
              <label for="public-key"><strong>Public key</strong></label><br>
              <input type="text" class="form-control shadow-none" id="public-key" aria-describedby="publicKeyHelp"
                name="publicKey" required>
              <small id="publicKeyHelp" class="form-text text-muted"></small>
            </div>
            <div class="form-group text-gray">
              <label for="password2"><strong>Password</strong></label>
              <input type="password" class="form-control" id="password2" name="password" required>
            </div>
            <div class="form-group form-check text-gray">
              <input type="checkbox" class="form-check-input" id="showpass2" onclick="togglePassVisibility(this.id)">
              <label class="form-check-label" for="showpass2">Show password</label>
            </div>
            <br>
            <small id="signinHelp" class="form-text text-muted text-center">{{signin_message}}</small>
            <button type="submit" class="btn btn-block btn-info my-2" aria-describedby="signinHelp"><strong>Submit</strong></button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  const PORT = 3000;

  const tabIds = ["signup-tab", "signin-tab"];
  const formIds = ["signup-form", "signin-form"];
  let validEmail = false;
  let validPassword = false;

  function toggleActiveTab(id) {
    console.log("id: " + id);

    tabIds.forEach(id => $(`#${id}`).removeClass('active-tab'));
    formIds.forEach(id => $(`#${id}`).prop('hidden', true));

    const activeFormId = formIds[tabIds.indexOf(id)];
    $(`#${id}`).addClass('active-tab');
    $(`#${activeFormId}`).prop('hidden', false);
  }

  function togglePassVisibility(checkboxId) {
    let input = null;
    if (checkboxId === "showpass1") {
      input = $('#password1')
    } else {
      input = $('#password2');
    }

    if (input.attr('type') === "password") {
      input.attr('type', 'text');
    } else {
      input.attr('type', 'password');
    }
  }

  function validateEmail(email) {
    const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
  }

  function validatePassword(password) {
    if (password.trim()) {
      return true;
    }
    return false;
  }

  function validateForm() {
    const password = $('#password1').val();
    const validPassword = validatePassword(password);
    if (validEmail && validPassword) {
      return true;
    }
    return false;
  }

  function checkEmailExists(email) {
    if (validateEmail(email)) {
      $.ajax({
        url: `http://localhost:${PORT}/api/users/${email}`,
        type: 'GET'
      }).done((data) => {
        console.log(data);
        if (data.isEmailExists === true) {
          $('#emailHelp').text("Email has already taken")
          validEmail = false;
        } else {
          $('#emailHelp').text("");
          validEmail = true;
        }
      })
    } else {
      $('#emailHelp').text("Invalid email");
      validEmail = false;
    }
  }

  function resetInput() {
    $('input').val("");
  }

  function handleSignUp() {
    if (validateForm()) {
      $('#signup-button').html('<span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span> <strong>Processing...</strong>')
      const dataToPost = {
        email: $('#email').val(),
        password: $('#password1').val()
      };
      const jsonToPost = JSON.stringify(dataToPost);

      $.ajax({
        url: `http://localhost:${PORT}/api/users`,
        type: 'POST',
        dataType: 'json',
        data: jsonToPost,
        contentType: 'application/json'
      }).done((data) => {
        console.log(data);
        Swal.mixin({
          input: 'text',
          confirmButtonText: 'Next &rarr;',
          showCancelButton: false,
          progressSteps: ['1', '2'],
          allowOutsideClick: false,
          confirmButtonColor: '#6c5ce7',
          inputAttributes: { disabled: true },
          backdrop: `rgba(0,0,0,0.8)`
        }).queue([
          {
            title: 'Private key',
            text: 'use to sign transaction',
            inputValue: data.privateKey
          },
          {
            title: 'Public key',
            text: 'use to sign in',
            inputValue: data.publicKey
          },
        ]).then((result) => {
          Swal.fire({
            icon: 'success',
            title: 'Have a nice day!',
            confirmButtonText: 'Lovely!'
          })
        })

        //toggle to sign in
        toggleActiveTab('signin-tab');
        $('#public-key').val(data.publicKey);
      }).fail((error) => {
        console.log(error)
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: error.responseJSON.error_message,
          showConfirmButton: false,
          timer: 2000
        })
      })

      $('#signup-button').html('<strong>Submit</strong>');
      resetInput();
    }

  }

  $(document).ready(function () {
    const receivedEmail = $('#email').val();
    console.log('receivedEmail:' + receivedEmail);
    if (receivedEmail) {
      toggleActiveTab(tabIds[0]);
    } else {
      toggleActiveTab(tabIds[1]);
    }
  });

</script>