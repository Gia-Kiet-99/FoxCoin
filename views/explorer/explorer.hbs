<div class="container-fluid">
  <header>
    <nav class="navbar fixed-top navbar-light bg-white">
      <a class="navbar-brand d-flex align-items-center" href="/wallet">
        <img src="images/fox.png" class="rounded-circle" width="40" height="40" alt="foxicon">
        &nbsp;&nbsp;<strong style="color: #b64900;">FoxWallet</strong>
      </a>
    </nav>
  </header>

  <main>
    <div class="row" style="height: 100vh;">
      <div class="col-sm-2 p-0">
        <nav class="navbar p-0" style="margin-top: 85px;">
          <ul style="list-style-type: none;width: 100%;margin: 0;padding: 0;">
            <li>
              <a href="/wallet" class="text-left sidebar-button p-3 pl-4">
                <i class="fa fa-home" style="font-size: 24px;" aria-hidden="true"></i>
                &nbsp;&nbsp;<strong>Wallet</strong>
              </a>
            </li>
            <li>
              <a href="/explorer" class="text-left sidebar-button active-side-bar p-3 pl-4" role="button">
                <i class="fab fa-wpexplorer" style="font-size: 24px;"></i>
                &nbsp;&nbsp;<strong>Explorer</strong>
              </a>
            </li>
          </ul>
        </nav>
      </div>
      <div class="col-sm-10 bg-light">
        <div class="row d-flex" style="margin: 75px;">
          <div class="mx-5 my-3 rounded-lg info" style="color: #eee;">
            <div class="card border-0">
              <div class="card-header" style="background-color: #8c7ae6;">
                <h5 style="margin-bottom: 0;"><strong>Latest blocks</strong></h5>
                <small>The most recently mined blocks</small>
              </div>
              <div class="card-body">
                <table class="table table-borderless">
                  <thead>
                    <tr>
                      <th scope="col">Height</th>
                      <th scope="col">Mined</th>
                      <th scope="col">Miner</th>
                      <th scope="col">Size</th>
                    </tr>
                  </thead>
                  <tbody id="block-rows">
                    {{#each blockchain}}
                    <tr>
                      <th scope="row">{{this.index}}</th>
                      <td>{{this.timestamp}}</td>
                      <td>{{this.miner}}</td>
                      <td>{{this.size}}</td>
                    </tr>
                    {{/each}}
                  </tbody>
                </table>
              </div>
              <div class="card-footer text-muted border-0 bg-white">
                <button type="button" name="" id="" class="button">
                  View All Blocks <i class="fas fa-arrow-right"></i>
                </button>
              </div>
            </div>
          </div>
          <div class="mr-5 my-3 rounded-lg info" style="color: #eee;">
            <div class="card border-0">
              <div class="card-header" style="background-color: #8c7ae6;">
                <h5 style="margin-bottom: 0;"><strong>Latest Transactions</strong></h5>
                <small>The most recently published unconfirmed transactions</small>
              </div>
              <div class="card-body">
                <table class="table table-borderless">
                  <thead>
                    <tr>
                      <th scope="col">Hash</th>
                      <th scope="col">Receiver</th>
                      <th scope="col">Amount (FXC)</th>
                    </tr>
                  </thead>
                  <tbody id="transaction-rows">
                    {{#each transactionPool}}
                    <tr>
                      <th class="transaction-id" scope="row">{{this.id}}</th>
                      <td>{{this.receiver}}</td>
                      <td>{{this.amount}}</td>
                    </tr>
                    {{/each}}
                  </tbody>
                </table>
              </div>
              <div class="card-footer text-muted border-0 bg-white">
                <button type="button" name="" id="" class="button">
                  View All Transactions <i class="fas fa-arrow-right"></i>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- <footer class="m-0 p-0">
      <div style="height: 200px; background-color: pink;margin: 0;padding: 0;">

      </div>
    </footer> -->

</div>

<script>
  const P2P_PORT = 3001;
  const MessageType = {
    QUERY_LATEST: 0,
    QUERY_ALL: 1,
    RESPONSE_BLOCKCHAIN: 2,
    QUERY_TRANSACTION_POOL: 3,
    RESPONSE_TRANSACTION_POOL: 4
  }

  function setupWS() {
    const ws = new WebSocket(`ws://localhost:${P2P_PORT}`);
    ws.onopen = function () {
      console.log('Onopen');
    }
    ws.onmessage = function (event) {
      const message = JSON.parse(event.data);
      const data = JSON.parse(message.data);
      switch (message.type) {
        case MessageType.RESPONSE_BLOCKCHAIN:
          updateBlockChain(data);
          break;
        case MessageType.RESPONSE_TRANSACTION_POOL:
          let rows = [];
          for (const tx of data) {
            rows.unshift(`<tr>
                      <th class="transaction-id" scope="row">${tx.id}</th>
                      <td>${tx.txOuts[0].address}</td>
                      <td>${tx.txOuts[0].amount}</td>
                    </tr>`);
          }
          $('#transaction-rows').html(rows.join());
          break;
        default:
          break;
      }
      console.log("Received message: " + event.data);
    }
  }
  setupWS();

  function updateTxPoolAfterMine(minedTransactions) {
    const minedTransactionIds = minedTransactions.map(trans => trans.id);
    const txPoolElements = document.getElementsByClassName('transaction-id');
    const removableElements = [];

    for (let i = 0; i < txPoolElements.length; i++) {
      if (minedTransactionIds.find(id => id === txPoolElements[i].innerHTML)) {
        removableElements.push(txPoolElements[i].parentNode);
      }
    }
    removableElements.forEach(e => e.remove());
  }

  function updateBlockChain(blockchain) {
    if (blockchain.length === 1) {
      let row = `<tr>
                  <th scope="row">${blockchain[0].index}</th>
                  <td>${blockchain[0].timestamp}</td>
                  <td>${blockchain[0].miner}</td>
                  <td>${JSON.stringify(blockchain[0]).length}</td>
                </tr>`;
      $('#block-rows').prepend(row);

      updateTxPoolAfterMine(blockchain[0].data);
    } else if (blockchain.length > 1) {
      let row = "";
      for (const block of blockchain) {
        row = `<tr>
                  <th scope="row">${block.index}</th>
                  <td>${block.timestamp}</td>
                  <td>${block.miner}</td>
                  <td>${JSON.stringify(block).length}</td>
                </tr>`;
        $('#block-rows').prepend(row);
      }
    }
  }


</script>